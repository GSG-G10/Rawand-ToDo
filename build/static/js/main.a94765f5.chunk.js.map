{"version":3,"sources":["Componentes/ToDo/ToDo.js","Componentes/ToDoForm/ToDoForm.js","App.js","index.js"],"names":["ToDo","index","todo","completeTodo","key","removeTodo","className","gutter","span","title","bordered","style","textDecoration","isCompleted","text","ghost","onClick","ToDoForm","addTodo","useState","value","setValue","onSubmitCapture","e","preventDefault","console","log","validateMessages","required","types","Item","label","name","rules","message","onChange","target","App","todos","setTodos","newTodos","splice","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8TA2BeA,MAtBf,YAAwD,IAAzCC,EAAwC,EAAxCA,MAAMC,EAAkC,EAAlCA,KAASC,GAAyB,EAA7BC,IAA6B,EAAzBD,cAAaE,EAAY,EAAZA,WAGvC,OACC,qBAAKC,UAAU,YAAf,SAEL,qBAAKA,UAAU,oBAAf,SAEA,cAAC,IAAD,CAAKC,OAAQ,GAAb,SACE,cAAC,IAAD,CAAKC,KAAM,EAAX,SACE,eAAC,IAAD,CAAMC,MAAM,GAAGC,UAAU,EAAOC,MAAO,CAAEC,eAAgBV,EAAKW,YAAc,eAAiB,IAA7F,UAECX,EAAKY,KACN,cAAC,IAAD,CAAQC,OAAK,EAACT,UAAU,SAASU,QAAS,kBAAIb,EAAaF,IAA3D,sBACA,cAAC,IAAD,CAAQc,OAAK,EAACT,UAAU,UAAUU,QAAS,kBAAIX,EAAWJ,IAA1D,2B,yBCyBWgB,MAvCf,YAA8B,IAAVC,EAAS,EAATA,QAChB,EAAuBC,mBAAS,IAAhC,mBAAOC,EAAP,KAAaC,EAAb,KAoBA,OACJ,gCACI,oBAAIf,UAAU,QAAd,kBAEJ,eAAC,IAAD,CAAMgB,gBAvBmB,SAACC,GAClBA,EAAEC,iBACGJ,GAKDF,EAAQE,GACRC,EAAS,KAJXI,QAAQC,IAAI,QAmBeC,iBAVR,CACrBC,SAAU,wBACVC,MAAO,CACLf,KAAM,kCAOhB,UACA,cAAC,IAAKgB,KAAN,CACQC,MAAM,GACNC,KAAK,OACLC,MAAO,CAAC,CAAEL,UAAU,EAAMM,QAAS,mCAEnC,cAAC,IAAD,CAAOC,SAAU,SAACZ,GAAD,OAAKF,EAASE,EAAEa,OAAOhB,QAAQA,MAAOA,EAAOa,MAAO,CAAC,CAAEL,UAAU,EAAMM,QAAS,yCCuB1FG,MArDf,WACE,MAA0BlB,mBAAS,CACjC,CACEL,KAAM,oBACND,aAAa,GAEf,CACEC,KAAM,wBACND,aAAa,GAEf,CACEC,KAAM,6BACND,aAAa,KAXjB,mBAAOyB,EAAP,KAAcC,EAAd,KAkBMpC,EAAc,SAACF,GACnB,IAAMuC,EAAQ,YAAOF,GACrBE,EAASvC,GAAOY,aAAc,EAC9B0B,EAASC,IAGLnC,EAAa,SAAAJ,GACjB,IAAMuC,EAAQ,YAAOF,GACrBE,EAASC,OAAOxC,EAAO,GACvBsC,EAASC,IAEX,OACE,sBAAKlC,UAAU,MAAf,UAEC,cAAC,EAAD,CAAUY,QAlBE,SAACJ,GACd,IAAM0B,EAAQ,sBAAOF,GAAP,CAAc,CAAExB,UAC9ByB,EAASC,MAiBPF,EAAMI,KAAI,SAACxC,EAAMD,GAAP,OACN,cAAC,EAAD,CAEEA,MAAOA,EACPC,KAAMA,EAENC,aAAcA,EACdE,WAAYA,GALPJ,UCpCjB0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a94765f5.chunk.js","sourcesContent":["import React,{ useContext } from \"react\";\r\nimport { Card, Col, Row } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport { Button } from 'antd';\r\nimport './ToDo.css'\r\nfunction ToDo({index,todo,key,completeTodo,removeTodo}){\r\n  \r\n \r\n    return(\r\n     <div className=\"contanier\">\r\n        \r\n<div className=\"site-card-wrapper\">\r\n\r\n<Row gutter={16}>\r\n  <Col span={8}>\r\n    <Card title=\"\" bordered={false} style={{ textDecoration: todo.isCompleted ? \"line-through\" : \"\" }}>\r\n    \r\n    {todo.text}\r\n    <Button ghost className=\"button\" onClick={()=>completeTodo(index)}>complete</Button>\r\n    <Button ghost className=\"buttonX\" onClick={()=>removeTodo(index)}>X</Button>\r\n    </Card>\r\n  </Col>\r\n  </Row>\r\n  </div>\r\n  </div>\r\n    )\r\n}\r\nexport default ToDo;","\r\nimport React, { useState } from \"react\";\r\nimport { Input,Form,Button } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './ToDoForm.css'\r\nfunction ToDoForm ({addTodo}){\r\n    const [value,setValue]=useState(\"\")\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if (!value) {\r\n           \r\n         {console.log('err')}\r\n        }\r\n        else{\r\n            addTodo(value)\r\n            setValue(\"\")\r\n        }\r\n   \r\n    }\r\n  \r\n    const validateMessages = {\r\n        required: '${label} is required!',\r\n        types: {\r\n          text: '${label} is not a valid todo!',\r\n       \r\n        },}\r\n    return(\r\n<div>\r\n    <h1 className=\"title\">ToDo</h1>\r\n  \r\n<Form onSubmitCapture={handleSubmit} validateMessages={validateMessages}>\r\n<Form.Item\r\n        label=\"\"\r\n        name=\"ToDo\"\r\n        rules={[{ required: true, message: 'Please input your ToDo Item!' }]}\r\n      ></Form.Item>\r\n        <Input onChange={(e)=>setValue(e.target.value)} value={value} rules={[{ required: true, message: 'Please input your username!' }]} />\r\n{/* <Input placeholder=\"Enter DoTo\" onChange={(e)=>setValue(e.target.value)} value={value}/> */}\r\n\r\n</Form>\r\n</div>\r\n    )\r\n\r\n}\r\nexport default ToDoForm;","\nimport './App.css';\nimport React ,{useState} from 'react';\n\nimport ToDo from './Componentes/ToDo/ToDo';\nimport ToDoForm from './Componentes/ToDoForm/ToDoForm';\nfunction App() {\n  const [todos, setTodos] = useState([\n    {\n      text: \"Learn about React\",\n      isCompleted: false\n    },\n    {\n      text: \"Meet friend for lunch\",\n      isCompleted: false\n    },\n    {\n      text: \"Build really cool todo app\",\n      isCompleted: false\n    }\n  ]);\n  const addTodo =(text)=>{\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  }\n  const completeTodo =(index)=>{\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = true;\n    setTodos(newTodos);\n  }\n  \n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n  return (\n    <div className=\"App\">\n    \n     <ToDoForm addTodo={addTodo}/>\n     {todos.map((todo, index) => (\n          <ToDo\n            key={index}\n            index={index}\n            todo={todo}\n         \n            completeTodo={completeTodo}\n            removeTodo={removeTodo}\n         \n          />\n        ))}\n       \n    \n         \n    \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}